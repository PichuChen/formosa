11,13c11
< 
< #define first_word_nc(s,w) (strncasecmp(s,w, strlen(w)) == 0)
< 
---
> #ifdef DEBUG
15d12
< 
16a14
> #endif
22a21
> /*
23a23
> */	
29c29,30
<    sprintf(gbuf, "%s -e %s \"%s\"", PGP_EXEC, file2, PUBLIC_KEY);
---
> 	sprintf(gbuf, "%s -e %s \"%s\"", BIN_PGP, file2, PUBLIC_KEY);
> #ifdef DEBUG	
31a33
> #endif	
33a36
> #ifdef DEBUG	
34a38
> #endif	
44a49
> #ifdef DEBUG
45a51
> #endif	
55c61
< int
---
> void
60c66
< 	struct userec usr;
---
> 	USEREC usr;
62,65c68,72
< 	dprintf (4, ("cond: %d\n", cond));
< 	if (get_passwd (&usr, name) <= 0)
< 		return;
< 	dprintf (2, ("user: %s\n", usr.userid));
---
> 	if (get_passwd(&usr, name) > 0)
> 	{
> #ifdef DEBUG	
> 		dprintf(2, ("user: %s", usr.userid));
> #endif
67c74
< 	update_user (&usr);
---
> 		update_passwd(&usr);
68a76
> }
136c144,145
<      char *filename, *subject;
---
> char *filename;
> char *subject;
141d149
< 	char decode_buf[512];
144,145c152,154
< 
< 	dprintf (1, ("==> process_ident: %s\n", subject));
---
> #ifdef DEBUG
> 	dprintf(1, ("=> process_ident: %s\n", subject));
> #endif	
167,168c176,178
< 	dprintf (3, ("==> stamp_fn: %s\n", stamp_fn));
< 	dprintf (2, ("==> userid: %s\n", userid));
---
> #ifdef DEBUG
> 	dprintf(3, ("\n=> stamp_fn: %s, userid: %s", stamp_fn, userid));
> #endif	
171a182,183
> 	{
> 		del_cmp_file(userid, subject);	
172a185
> 	}
183c196
< 	if (!(tmp = strrchr (buf, '(')))
---
> 	if ((tmp = strrchr(buf, '(')) == NULL)
191c204,206
< 	dprintf (2, ("===> realuserid: [%s]\n", realuserid));
---
> #ifdef DEBUG
> 	dprintf(2, ("\n=> realuserid: [%s]", realuserid));
> #endif	
192a208,209
> 	{
> 		del_cmp_file(userid, subject);		
193a211
> 	}
199c217,219
< 	dprintf (2, ("==> a_ok\n"));
---
> #ifdef DEBUG
> 	dprintf(2, ("\n=> a_ok "));	
> #endif	
204c224,227
< 	dprintf (4, ("===> do_article\n"));
---
> 
> #ifdef DEBUG
> 	dprintf(4, ("=> do_article\n"));
> #endif	
208c231,233
< 	dprintf (3, ("==> a_encode\n"));
---
> #ifdef DEBUG	
> 	dprintf(3, ("=> a_encode\n"));
> #endif	
211c236,238
< 	dprintf (4, ("=====> del_ident_article [%s]\n", stamp_fn));
---
> #ifdef DEBUG
> 	dprintf(4, ("=> del_ident_article [%s]\n", stamp_fn));
> #endif	
213a241,244
> 	/* mail to user to infor that he has been idented in our bbs */	
> 	SendMail(-1, FALSE, IDENTED, "SYSOP", userid, 
> 	         "[通知] 您已通過本站身份認證！", 7);
> 
216a248,252
> 
> /***************************************************
>  * 認證失敗，刪除那個id所真正擁有的認證比對檔案，  *
>  * 避免有人多猜幾次檔名就命中。					   *
>  ***************************************************/
218c254,255
< del_check_file (char *subject)
---
> del_cmp_file(userid, subject)	/* wnlee */
> char *userid, *subject;
221,222c258,260
< 	char bbsid[IDLEN + 1], fname[PATHLEN], *p, *id;
< 	int fd, n;
---
> 	char fname[PATHLEN];
> 	int fd;
> 	FILE *fpw;
224,232c262,263
< 	/* 先找出要認證 id -> 某甲 */
< 	p = subject;
< 	id = bbsid;
< 	n = strlen (p);
< 	for (; *p != '(' && n != 0; p++, n--)
< 		;
< 	if (n == 0)
< 		return 0;
< 	else
---
> 	sprintf(fname, "ID/%s", DIR_REC);
> 	if ((fd = open(fname, O_RDONLY)) < 0 )
234,238c265,266
< 		p += 2;
< 		for (; *p != ' ' && n != 0; n--)
< 			*id++ = *p++;
< 		if (n == 0)
< 			return 0;
---
> 		printf("cannot open: ", fname);
> 		return -1;
240,242c268,270
< 	/* 在 ID 那個目錄的 .DIR 找出 檔案 bbs-owner 是 某甲 ，就刪掉它 */
< 	sprintf (fname, "/ID/%s", DIR_REC);
< 	if ((fd = open (fname, O_RDONLY)) < 0)
---
> 	flock(fd, LOCK_EX);
> 	sprintf(fname, "log/ident_cheat.log");
> 	if( (fpw = fopen(fname, "a+")) ==NULL)
244c272
< 		printf ("cannot open %s%s", HOMEBBS, fname);
---
> 		printf("cannot write log: %s\n", fname);	
248d275
< 		if (!strcmp (fh.owner, bbsid))
250,251c277,281
< 			sprintf (fname, "/ID/%s", fh.filename);
< 			printf ("deleted [%s/ID/%s]\n", HOMEBBS, fh.filename);
---
> 		if (!strcmp(fh.owner, userid))
> 		{
> 			sprintf(fname, "ID/%s", fh.filename);
> 			fprintf(fpw, "deleted [ID/%s] owner [%s]\n%s\n", fh.filename,
> 			        userid, subject);
253a284,286
> 	}
> 	flock(fd, LOCK_UN);
> 	fclose(fpw);
258,262d290
< void
< my_add_newline (char *str)
< {
< 	int i;
< 	char *p;
264,272d291
< 	p = str;
< 	for (; *p != '\0'; *p++)
< 		;
< 	*p++ = '\n';
< 	*p = '\0';
< }
< 
< 
< 
288a308
> #ifdef DEBUG
289a310
> #endif		
290a312
> #ifdef DEBUG		
291a314
> #endif		
299d321
< 
305a328
> #ifdef DEBUG
306a330
> #endif			
309a334
> #ifdef DEBUG
310a336
> #endif				
317c343,344
< 		my_add_newline (dst);
---
> 		strcat(dst, "\n");
> #ifdef DEBUG
318a346
> #endif		
326d353
< 
332a360
> #ifdef DEBUG
333a362
> #endif			
336a366
> #ifdef DEBUG			
337a368
> #endif				
343c374
< 		my_add_newline (dst);
---
> 		strcat(dst, "\n");
353d383
< 
360,361c390,391
< 	int fdw, yeah = -1;
< 	char buf[1024];
---
> 	int fdw;
> 	char buf[1024], *ptr;
363c393
< 	char from[512] = "\0", dot_from[512] = "\0", subject[512] = "\0";
---
> 	char from[512] = "\0", dot_from[512] = "\0", subject[256] = "\0";
366,371d395
< 	char one_mail[PATHLEN] = "/tmp/one_mail", *ptr;
< 
< #ifdef CHROOT_BBS
< 	char path_buf[100];
< #endif
< 	int number = 0;
379,380d402
< 	time (&now);
< 
382,385c404,410
< 	sprintf (fn_idcktmp, "%s/%s.%d", HOMEBBS, PATH_IDCHECK_TMP, now);
< 	if (!isfile (fn_idckori))
< 		exit (0);
< 
---
> 	if (chdir(HOMEBBS) == -1)
> 	{
> 		fprintf(stderr, "cannot chdir: %s\n", HOMEBBS);
> 		exit(1);
> 	}
> 	time(&now);	
> 	sprintf(fn_idcktmp, "%s.%d", IDC_TMP, now);	
389,390c414
< 		fflush (stderr);
< 		exit (-1);
---
> 		exit(2);
396,400d419
< #ifdef CHROOT_BBS		/* wnlee */
< 	strcpy (path_buf, strstr (fn_idcktmp, "/apps/bbs") + 9);
< 	strcpy (fn_idcktmp, path_buf);
< #endif
< 
404,405c423
< 		fflush (stderr);
< 		exit (-1);
---
> 		exit(3);
415,417d432
< #if 0
< 			printf ("gogo!!\nbuf is %s\n", buf);
< #endif
429c444
< 			else if (first_word_nc (buf, "From: "))
---
> 			else if (!strncasecmp(buf, "From: ", 6))
431c446
< 			else if (first_word_nc (buf, "Subject: "))
---
> 			else if (!strncasecmp(buf, "Subject: ", 9))
432a448
> #ifdef DEBUG
433a450
> #endif				
439c456
< 			if (line_size == 0 || first_word_nc (buf, "From "))
---
> 			if (line_size == 0 || !strncasecmp(buf, "From ", 5))
443,449c460,468
< 					dprintf (1, ("\n==> [%d] From %s", ++number, from));
< 					dprintf (1, ("==> From: %s", dot_from));
< 					dprintf (1, ("==> Subject: %s", subject));
< 					dprintf (1, ("==> Mail_Start: %d\n", mail_start));
< 					dprintf (1, ("==> Mail-Size: %d\n", mail_size));
< 					dprintf (1, ("==> Content-Length: %d\n\n", content_length));
< 					if ((fdw = open (one_mail, O_WRONLY | O_CREAT | O_TRUNC, 0600)) > 0)
---
> #ifdef DEBUG				
> 					dprintf(1, ("\n=> [%d] From %s", ++number, from));
> 					dprintf(1, ("=> From: %s", dot_from));
> 					dprintf(1, ("=> Subject: %s", subject));
> 					dprintf(1, ("=> Mail_Start: %d\n", mail_start));
> 					dprintf(1, ("=> Mail-Size: %d\n", mail_size));	
> 					dprintf(1, ("=> Content-Length: %d\n\n", content_length));
> #endif					
> 					if ((fdw = open(IDC_MAIL, O_WRONLY | O_CREAT| O_TRUNC, 0600)) > 0)
451,454c470,471
< 						size_t r_cc = mail_size,
< 						  w_cc = mail_size - content_length;
< 						size_t r_size, w_size,
< 						  size;
---
> 						size_t r_cc = mail_size, w_cc = mail_size - content_length;
> 						size_t r_size, w_size;
479c496
< 						yeah = process_ident (one_mail, subject);
---
> 						process_ident(IDC_MAIL, subject);
481,484c498,499
< 						/*       認證失敗，刪除那個id所真正擁有的認證比對檔案，
< 						   避免有人多猜幾次檔名就命中 */
< 						if (yeah < 0)
< 							del_check_file (subject);
---
> 						unlink(IDC_MAIL);
> 					}	/* if (open) */
486,488d500
< 						unlink (one_mail);
< 					}	/* end if( open ) */
< 
493c505,507
< 						dprintf (1, ("===> Invalid From %s\n", from));
---
> #ifdef DEBUG					
> 						dprintf(1, ("=> Invalid From %s\n", from));
> #endif						
498c512
< 				}	/* end if(from[0]) */
---
> 				}	/* if (from[0]) */
516c530
< 		}		/* end else */
---
> 		}	/* else */
519c533
< 	}			/* end while */
---
> 	}	/* while */
