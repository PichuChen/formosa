#!/usr/bin/perl
#
# bntplink

($bbshome) = @ARGV;
if( ! $bbshome ) {
    print "Usage: bntplink bbs_home\n";
    exit( 0 );
}

$logfile     = "$bbshome/bbslog";
# $echomail    = "$bbshome/echomail.log";
$outgoing    = "$bbshome/out.going";
$cancelpost  = "$bbshome/cancelpost.lst";
$inndhome    = "$bbshome/innd";
$bbspost     = "$inndhome/bbspost";
$INC[ @INC ] = "$inndhome";
$tmpfile     = "/tmp/bntplink$$";
$ctlinnbbsd  = "$inndhome/ctlinnbbsd";

require "tcp.pl";
require "innbbslib.pl";

$LOCK_SH = 1;
$LOCK_EX = 2;
$LOCK_NB = 4;
$LOCK_UN = 8;

&openfiles();
&bntplink();
&closefiles();
if ( -f $tmpfile ) {
  unlink($tmpfile);
}

sub openfiles {
	local($oldfd);
	if( $echomail ) {
	    open( ECHOMAIL, ">> $echomail" );
	    $oldfh = select(ECHOMAIL); $| = 1; select($oldfh);
	}
}

sub closefiles {
	if ( $echomail ) {
	  close( ECHOMAIL );
	}
}

sub lock {
    local(*FH)=@_;
    flock(FH,$LOCK_EX);
# and, in case someone appended
# while we were waiting...
    seek(FH, 0, 2);
}

sub unlock {
    local(*FH)=@_;
    flock(FH,$LOCK_UN);
}


sub show_usage
{
    print "bntplink initial failure !!\
本程式要正常執行必須將以下檔案置於 $inndhome/ 下:\
  bbsname.bbs   設定貴站的 BBS ID (請儘量簡短)\
  nodelist.bbs  設定網路各 BBS 站的 ID, Address 和 fullname\
  newsfeeds.bbs 設定網路信件的 newsgroup board nodelist ...\
\
		- by: wolfchen 交大資工  Mar  1\n";
    exit( 0 );
}

sub read_article
{
    local	($filename) = @_;
    local	(@filestat);

    @filestat = stat( $filepath );
    $mtime = $filestat[ 9 ];

    open( FN, $filename );
    while( <FN> ) {
	chop $_;
	if( $_ eq "" ) { last; }
	if( index( $_, $userid ) > 0 ) {
	    $m = index( $_, "(" );
	    $n = rindex( $_, ")" );
	    $nickname = substr( $_, $m+1, $n-$m-1 );
	    if( ($n = index( $nickname, "\r" )) > 0 ) {
		$nickname = substr( $nickname, 0, $n );
	    }
	} elsif( index( $_, "Date:      " ) == 0 ) {
	    $date = substr( $_, 11, 99 );
	} elsif( index( $_, "發信站: " ) == 0 ) {
	    $m = rindex( $_, "(" );
	    $n = rindex( $_, ")" );
	    $date = substr( $_, $m+1, $n-$m-1 );
	}
    }
    @BODY = <FN>;
    close( FN );
}

sub save_article
{
    local  ($target) = @_;
    $now = time;

    open( FN, $target );
    &lock(FN);
    print FN "發信人: $poster, 信區: $board\n";
    print FN "標  題: $subject\n";
    print FN "發信站: $mysite ($date)\n";
    print FN "轉信站: $path\n";
    print FN "\n";
    print FN @BODY;
    &unlock(FN);
    close( FN );
    utime $mtime, $mtime, $target;
    utime $now, $now, "$bbshome/.bcache/$board"
}

sub save_outgoing
{
   $from = $poster;
   $from =~ s/\@$mybbsid/.bbs\@$myaddr/;
   $path = $mybbsid;
   ($group, $server) = &search_board( $board );
   if (!$server) {
	$path = "$mybbsid (local)";
	$serveraddr = "";
   }
   @Servers = split(/\s+/,$server);
   foreach $server (@Servers) {
    ($serveraddr, $protocol, $servername) = &search_nodelist( $server );
    if( $serveraddr ) {
       if ($protocol) {
#	open( LINK, ">> $outgoing/$serveraddr.$protocol.link" );
	open( LINK, ">> $outgoing/$server.link" );
       } else {
#	open( LINK, ">> $outgoing/$serveraddr.link" );
	open( LINK, ">> $outgoing/$server.link" );
       }
       &lock(LINK);
       print LINK "$board\t$filename\t$group\t$mtime\t$from\t$subject\n";
       &unlock(LINK);
       close( LINK );
    }
   }
}

sub process_article
{
    local	($board, $filename, $userid, $subject) = @_;

    if( ! $userid ) {
	return;
    } elsif( ! $subject ) {
	$subject = "(none)";
    }
    if( ($n = index( $subject, "\r" )) > 0 ) {
	$subject = substr( $subject, 0, $n );
    }
    $filepath = "$bbshome/boards/$board/$filename";
    if( -f $filepath ) {
#	&bbslog( "Read File: $filepath\n" );
	&read_article( $filepath );
	$poster = "$userid\@$mybbsid ($nickname)";
	&save_outgoing();
	&save_article( "> $filepath" );
    }
}

sub process_cancel
{
    local	($board, $filename, $userid, $poster, $path) = @_;

    if( ! $userid || ! $poster || $path ne $mybbsid ) {
	return;
    }
    $mtime = -1;
    $subject = "Article cancelled by $userid\@$mybbsid within bbs [v2.0]";
    &save_outgoing();
}

sub tcpcommand
{
    local	($msg) = @_;

    print NNTP "$msg\r\n";
    $_ = <NNTP>;
    chop; chop;
    return $_;
}

sub baseN
{
    local	($val, $base, $len) = @_;
    local	($str, $n, $ans);

    while( length( $str ) < $len ) {
	$n = $val % $base;
	$val /= $base;
	if( $n < 10 ) { $n += ord( '0' ); }
	elsif( $n < 36 ) { $n += ord( 'A' ) - 10; }
	elsif( $n < 62 ) { $n += ord( 'a' ) - 36; }
	else { $n = ord( '_' ); }
	$str = pack( "c", $n ) . $str;
    }
    return $str;
}

sub hash_value
{
    local	($str) = @_;
    local	($val, $n);

    $val = 0;
    while( $str ) {
	$n = ord( chop $str );
	$val = ($val + $n * 0x100) ^ $n;
    }
    return &baseN( $val, 64, 3 );
}

sub read_outgoing
{
    $hash = &hash_value( "$filename.$board" );
    $times = &baseN( substr( $filename, 2 ), 48, 6 );
    if ($NEWSFEED eq "local") {
      $msgid = $times . "\$" . $hash . "@" . $myaddr 
    }
    if( $mtime == -1 ) {
	@BODY = ( "$subject\r\n" );
	$subject = "cmsg cancel <$msgid>";
	$control = "cancel <$msgid>";
	$msgid =  "$$.$msgid";
	$date = &ascii_date( time() );
    } else {
	$control = "";
	$date = &ascii_date( $mtime );
	if( $echomail && $NEWSFEED eq "local" ) {
  	    open( FN, ">> $echomail" );
	    &lock(ECHOMAIL);
	    print ECHOMAIL "\n";
	    print ECHOMAIL "發信人: $from, 信區: $group\n";
	    print ECHOMAIL "標  題: $subject\n";
	    print ECHOMAIL "發信站: $mysite ($date)\n";
	    print ECHOMAIL "轉信站: $mybbsid\n";
	    &unlock(ECHOMAIL);
  	    close( FN );
	}

	@BODY = ();
	open( FN, "$bbshome/boards/$board/$filename" );
	undef $organization;
	undef $newscontrol;
	undef $newsapproved;
	while( <FN> ) {
	    if( $_ eq "\n" ) { last; }
	    if ( $NEWSFEED eq "remote") {
	      if( index( $_, "Date:      " ) == 0 ) {
		  $date = substr( $_, 11 );
	      } elsif( index( $_, "發信站: " ) == 0 ) {
	          $m = rindex( $_, "(" );
		  $n = rindex( $_, ")" );
	          $date = substr( $_, $m+1, $n-$m-1 );
		  $organization = substr( $_, 8, $m - 8); 
	      } elsif ( index( $_, "Control: ") == 0) {
		  $newscontrol = substr($_, 9);
	      } elsif ( index( $_, "Approved: ") == 0) {
		  $newsapproved = substr($_, 10);
	      }
	    }
	}
	while( <FN> ) {
	    chop;
#	    print "get line ($_)\n";
	    if( $_ eq "." ) { $_ = ".."; }
	    if( $NEWSFEED eq "remote" &&
		$newscontrol =~ /cancel/ &&
		$_  =~  /^------------------/) {
	      last;
	    }
	    $BODY[ @BODY ] = "$_\r\n";
	}
#	print "BODY @BODY\n";
	close( FN );
    }
}

sub post_article
{
    local	($node, $filepath) = @_;

    if ($NEWSFEED eq "remote") {
      print NNTP "Path: $path\r\n";
      print NNTP "From: $from\r\n";
      print NNTP "Newsgroups: $group\r\n";
      print NNTP "Subject: $subject\r\n";
#      print "Post with subject ($subject)\n";
      print NNTP "Date: $date\r\n";
      print NNTP "Organization: $organization\r\n" if ($organization);
      print NNTP "Message-ID: <$msgid>\r\n";
      print NNTP "Control: $newscontrol\r\n" if ($newscontrol);
      print NNTP "Approved: $newsapproved\r\n" if ($newsapproved);
    } else {
      print NNTP "Path: $mybbsid\r\n";
      print NNTP "From: $from\r\n";
      print NNTP "Newsgroups: $group\r\n";
      print NNTP "Subject: $subject\r\n";
      print NNTP "Date: $date\r\n";
      print NNTP "Organization: $mysite\r\n";
      print NNTP "Message-ID: <$msgid>\r\n";
      print NNTP "X-Filename: $board/$filename\r\n";
    }
    if( $control ) {
	print NNTP "Control: $control\r\n";
    }
    print NNTP "\r\n";
    print NNTP @BODY;
#    print "send out @BODY\n";

    $status = &tcpcommand( "." );
# 435 duplicated article
# 437 invalid header
    if ( $USEIHAVE ) {
	    if( $status == 235 ) {
		if ($NEWSFEED eq "local") {
		  &bbslog( "Sendout <$msgid> from $board/$filename\n" );
		}
	    } elsif( $status == 437 || $status == 435) {
		&bbslog( ":Warn: $status <$msgid>\n" );
	    } else {
		&bbslog( ":Err: $status of <$msgid>\n" );
		if ($op) {
#		  open( LINK, ">> $hostname.$op.link" );
		  open( LINK, ">> $node.link" );
		} else {
#		  open( LINK, ">> $hostname.link" );
		  open( LINK, ">> $node.link" );
		}
		&lock(LINK);
		print LINK "$textline\n";
		&unlock(LINK);
		close( LINK );
    	    }
    } elsif ($USEPOST) {
	    if( $status == 240 ) {
		&bbslog( "Sendout <$msgid> from $board/$filename\n" );
#	    } elsif( $status == 441 ) {
#		&bbslog( ":Warn: $status <$msgid>\n" );
            } else {
		&bbslog( ":Err: $status of <$msgid>\n" );
		if ($op) {
		  open( LINK, ">> $node.link" );
		} else {
		  open( LINK, ">> $node.link" );
		}
		&lock(LINK);
		print LINK "$textline\n";
		&unlock(LINK);
		close( LINK );
    	    }
    } else {
	    if( $status == 250 ) {
		&bbslog( "DATA Sendout <$msgid> from $board/$filename\n" );
	    } else {
		&bbslog( ":Err: $status of <$msgid>\n" );
		if ($op) {
		  open( LINK, ">> $node.link" );
		} else {
		  open( LINK, ">> $node.link" );
		}
		&lock(LINK);
		print LINK "$textline\n";
		&unlock(LINK);
		close( LINK );
    	    }
    }
}

sub open_link {

    local($hostname, $hostprot, $hostport) = @_;

    $USEIHAVE = 1;
    $USEPOST  = 0;
    $USEDATA  = 0;
    $FEEDTYPE = ' ';
    if ($hostprot !~ /ihave/i) {
       $USEIHAVE = 0;
       $USEPOST  = 1;
       if ($hostprot =~ /post/i) {
	 $USEPOST = 1;
       } elsif ($hostprot =~ /data/i) {
         $USEPOST = 0;
	 $USEDATA = 1;
       }
    } 
    $FEEDTYPE = substr($hostname,0,1);
    if (! $USEDATA) {
	    if ($FEEDTYPE eq '-' || $FEEDTYPE eq '+') {
	      $hostname = substr($hostname,1);
            }
	    if (index($hostname,'@') >= 0) {
               $hostname = substr($hostname, index($hostname,'@') + 1 );
	    }
	    if (!&tcpinetclient( NNTP, $hostname, $hostport )) {
	       &bbslog( ":Err: server error: cant connect" );
	       exit( 0 );
#	       return;
	    } 
	    $status = <NNTP>;
	    if( $status != 200 ) {
		&bbslog( ":Err: server error: $status" );
		exit( 0 );
            }
    } else {
	    if (!&tcpinetclient( NNTP, "localhost", $hostport )) {
	       &bbslog( ":Err: server error: cant connect" );
	       exit( 0 );
#	       return;
	    } 
	    $status = <NNTP>;
            if ($status !~ /^220/) { 
		&bbslog( ":Err: server error: $status" );
		exit( 0 );
            }
	    if ($status =~ /^220-/) {
	       $status = <NNTP>;
	    }
    }
}


sub cancel_outgoing
{
   local($board, $filepath, $from)=@_;
   local($base,$filename);
   &bbslog("Try to move moderated post from $board to deleted\n"); 
   open( FN, "| $bbspost post $bbshome/boards/deleted > $tmpfile" );
   print FN "${from}\n";
   print FN "$subject\n";
   print FN "發信人: $from, 信區: $board\n";
   print FN "標  題: $subject\n";
   print FN "發信站: $mysite ($date)\n";
   print FN "轉信站: $mybbsid\n";
   print FN "\n";
   print FN @BODY;
   close( FN );
   $result = &get_tmpfile();
   if( index( $result, "post to " ) == 0 ) {
 # try to remove it
      if ( -f $filepath ) {
	rename($filepath, "$filepath.cancel");
      }
      open(FN,"> $filepath") ;
      print FN "發信人: $from, 信區: $board\n";
      print FN "標  題: <article cancelled and mailed to the moderator\n";
      print FN "發信站: $mysite ($date)\n";
      print FN "轉信站: $mybbsid\n";
      print FN "\n";
      print FN <<"MODE";

你的文章已經送往審核中. 請等待回覆.

Your post has been sent to the moderator and move
into the deleted board. If the post accepted by the moderator,
it will be posted in this board again. Please wait.
MODE
   } else {
      &bbslog( $result );
   }

   if ( ($base=rindex($filepath,"/")) >=0 ) {
    $filename = substr($filepath, $base+1);
   } else {
    $filename = $filepath;
   }
   &bbslog("$bbspost cancel $bbshome $board $filename moderate\n");
   system("$bbspost cancel $bbshome $board $filename moderate");
}

sub send_bbsfeeds
{
    local	($hostname, $hostprot, $hostport, $overview, $op) = @_;
    local       ($month, $day, $time, $outgoingtype, $feedserver, $group, $msgid, $path, $filepath);
    &open_link($hostname, $hostprot, $hostport);
    open( POSTS, $overview );
    while( $textline = <POSTS> ) {
	chop( $textline );
#	($month, $day, $time, $outgoingtype, $feedserver, $group, $msgid, $path, $filepath) = split(/\s+/, $textline);
	($board, $filename, $group, $mtime, $from, $subject)
		= split( "\t", $textline );
	&read_outgoing();
	$filepath = "$bbshome/boards/$board/$filename";
	&send_outgoing($filepath);
#	&bbslog("feedtype $FEEDTYPE hostname $hostname\n");
	if ($FEEDTYPE eq '-') {
	  &cancel_outgoing($board, $filepath, $from);
	}
    }
    close( POSTS );
    &close_link();
    unlink( $overview );
}

sub send_nntplink
{
    local	($node, $hostname, $hostprot, $hostport, $overview, $op) = @_;

    &open_link($hostname, $hostprot, $hostport);
    open( POSTS, $overview );
    while( $textline = <POSTS> ) {
	chop( $textline );
	$NEWSFEED = "local";
	($board, $filename, $group, $mtime, $from, $subject, $outgoingtype, $msgid, $path)
		= split( "\t", $textline );
        if ( $outgoingtype && $msgid && $path) {
	  $NEWSFEED = "remote";
	  $msgid =~ s/[<>]//g;
	}
	&read_outgoing();
	$filepath = "$bbshome/boards/$board/$filename";
	&send_outgoing($node, $filepath);
#	&bbslog("feedtype $FEEDTYPE hostname $hostname\n");
	if ($FEEDTYPE eq '-') {
	  &cancel_outgoing($board, $filepath, $from);
	}
    }
    close( POSTS );
    &close_link();
    unlink( $overview );
}

sub close_link {
    $status = &tcpcommand( "QUIT" );
    if( $status != 205 && $status != 221) {
	&bbslog( ":Err: Cannot quit message '$status'\n" );
    }
    close( NNTP );
}

sub send_outgoing {
        local($node, $filepath)=@_;
	if( @BODY > 0 ) {
	  if ( $USEIHAVE ) {
	    $status = &tcpcommand( "IHAVE <$msgid>" );
	    if( $status == 335 ) {
		&post_article( $node, $filepath );
	    } elsif( $status == 435 ) {
		&bbslog( ":Warn: $status, IHAVE <$msgid>\n" );
	    } else {
		&bbslog( ":Err: $status, IHAVE <$msgid>\n" );
		if ($op) {
		  open( LINK, ">> $node.link" );
                } else {
		  open( LINK, ">> $node.link" );
		}
		&lock(LINK);
		print LINK "$textline\n";
		&unlock(LINK);
		close( LINK );
	    }
	  } elsif ($USEPOST) {
	    &tcpcommand("MODE READER");
	    $status = &tcpcommand( "POST" );
	    if( $status == 340 ) {
		&post_article( $node, $filepath );
	    } elsif( $status == 441 ) {
		&bbslog( ":Warn: $status, POST <$msgid>\n" );
	    } else {
		&bbslog( ":Err: $status, POST <$msgid>\n" );
		if ($op) {
		  open( LINK, ">> $node.link" );
		} else {
		  open( LINK, ">> $node.link" );
		}
		&lock(LINK);
		print LINK "$textline\n";
		&unlock(LINK);
		close( LINK );
	    }
	  } else {
	    $backhost = $hostname;
	    if ($FEEDTYPE eq '-' || $FEEDTYPE eq '+') {
	      $hostname = substr($hostname,1);
            }
	    &tcpcommand("HELO");
	    &tcpcommand("MAIL FROM: bbs");
	    &tcpcommand("RCPT TO: $hostname");
	    &bbslog("RCPT TO: $hostname\n");
	    $status = &tcpcommand( "DATA" );
	    if( $status == 354 ) {
		&post_article( $node, $filepath );
            } else {
		&bbslog( ":Err: $status, DATA <$msgid>\n" );
		if ($op) {
		  open( LINK, ">> $node.link" );
#		  open( LINK, ">> $backhostname.$op.link" );
		} else {
		  open( LINK, ">> $node.link" );
#		  open( LINK, ">> $backhostname.link" );
		}
		&lock(LINK);
		print LINK "$textline\n";
		&unlock(LINK);
		close( LINK );
	    }
	  }
	}
}

sub send_article
{
    local	($node, $site, $addr, $protocol, $port,$op );

    chdir( $outgoing );
    foreach $node ( @NODELIST ) {
	next if ($node =~ /^#/);
	next if ($node =~ /^$/);
	($site, $nntphost, $op) = split( /\s+/, $node );
	if ($op && $op =~ /ihave|post|data/i ) {
	   if ($op =~ /(\w+)\((\w+)\)/) {
	      ($protocol, $port) = ($1,$2);
	   } else {
	     $protocol = $op;
	     $port = "nntp";
	   }
	   $linkfile = "$site.link";
	   $sendfile = "$site.sending";
	   $feedfile = "$site.feed";
#	   $linkfile = "$nntphost.$op.link";
#	   $sendfile = "$nntphost.$op.sending";
	} else { 
	  $op = $null;
	  $protocl = "IHAVE";
	  $port = "nntp";
	  $linkfile = "$site.link";
	  $sendfile = "$site.sending";
	  $feedfile = "$site.feed";
#	  $linkfile = "$nntphost.link";
#	  $sendfile = "$nntphost.sending";
	}
	if( -f $sendfile ) {
	  &send_nntplink( $site, $nntphost, $protocol, $port, $sendfile, $op );
	}
	if( -f $linkfile ) {
	  rename( $linkfile, $sendfile );
	  &send_nntplink( $site, $nntphost, $protocol, $port, $sendfile, $op);
	}
	if ( -f "${feedfile}ing") {
	  &send_nntplink( $site, $nntphost, $protocol, $port, "${feedfile}ing", $op);
	}
	if( -f $feedfile ) {
	  rename( $feedfile, "${feedfile}ing" );
	  if (-x $ctlinnbbsd) {
	    system("$ctlinnbbsd reload");
	  }
	  &send_nntplink( $site, $nntphost, $protocol, $port, "${feedfile}ing", $op);
	}
    }
}

sub bntplink
{
    if( &initial_bbs() == 0 ) {
	&show_usage();
    }
    ($myaddr, $linkprotocol, $mysite) = &search_nodelist( $mybbsid );
    if ($protocol =~ /^(\w+)\((\d+)\)$/) {
	($linkprotocol, $linkport) = ($1,$2);
    }
    if( ! -d $outgoing ) {
	mkdir( $outgoing, 0750 );
    }

    open( NEWPOST, "$bbspost visit $bbshome |" );
    $result = <NEWPOST>;
    if( $result eq "New article listed:\n" ) {
	while( <NEWPOST> ) {
	    chop( $_ );
	    &process_article( split( "\t", $_ ) );
	}
    }
    close( NEWPOST );

    if( -f $cancelpost ) {
	$cancelfile = "$cancelpost.$$";
	rename( $cancelpost, $cancelfile );
	open( CANCELFILE, $cancelfile );
	while( <CANCELFILE> ) {
	    chop( $_ );
	    &process_cancel( split( "\t", $_ ) );
	}
	close( CANCELFILE );
	unlink( $cancelfile );
    }

    print "try to send article\n";
    &send_article();
}

